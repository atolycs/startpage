name: Check with ReviewDog

on:
  workflow_dispatch:
  pull_request:
        branches:
          - main

jobs:
  reviewdog:
    name: Setup Reviewdog
    runs-on: ubuntu-latest

    steps:
      - name: checkout Repository
        uses: actions/checkout@v4
      
      - name: setup node
        uses: actions/setup-node@v4
      
      - name: setup Reviewdog
        uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: latest
      
      - name: cache activate
        uses: actions/cache@v4
        id: node_modules_cache_id
        env:
           cache-name: 'node_modules'
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-lint-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-lint
      
      - name: checking node_modules cache
        run: echo '${{ toJSON(steps.node_modules_cache_id) }}'
      
      - if: ${{ steps.node_modules_cache_id.outputs.cache-hit != 'true' }}
        name: Install eslint and dependencies
        run: |
          npm ci
      
      - name: Installed eslint check
        run: npm ls --depth=1

  linterhtml:
    name: HTML Lint
    runs-on: ubuntu-latest
    needs: [ reviewdog ]
    steps:
      - name: Generate Token
        id: create-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PEM }}
      
      - name: checkout Repository
        uses: actions/checkout@v4
      
      - name: cache restore
        uses: actions/cache@v4
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-lint-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-lint
      
      - name: Run html eslint with reviewdog
        uses: reviewdog/action-eslint@v1
        with:
          github_token: ${{ steps.create-token.outputs.token }}
          reporter: github-pr-review
          fail_on_error: true
          eslint_flags: "./**/*.html"

  lintercss:
    name: HTML Lint
    runs-on: ubuntu-latest
    needs: [ reviewdog ]
    steps:
      - name: Generate Token
        id: create-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PEM }}
      
      - name: checkout Repository
        uses: actions/checkout@v4
      
      - name: cache restore
        uses: actions/cache@v4
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-lint-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-lint
      
      - name: Run html eslint with reviewdog
        uses: reviewdog/action-stylelint@v1
        with:
          github_token: ${{ steps.create-token.outputs.token }}
          reporter: github-pr-review
          fail_on_error: true
          stylelint_input: "./**/*.css"

#  review_result:
#     name: Reviewdog Result
